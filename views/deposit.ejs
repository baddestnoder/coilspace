<!DOCTYPE html>
<html>
<head>

	<%-include("./partialTemplate/meta.ejs")%>

	<title>CoilSpace | Depsit with Coil</title>



	<style type="text/css">
		
		@media screen and (min-width: 200px){

			main{
				position: relative;
				width: 80%;
				margin: 50px auto 0 auto;
			}



			h1{
				color: rgb(50, 50, 50);
				margin-bottom: 10px;
			}



			main p{
				margin-top: 10px;
			}


			form{
				margin: 20px 0 0 0;
			}


			input{
				display: block;
				height: 35px;
				border: 2px solid rgb(70, 70, 70);
				border-radius: 5px;
				padding-left: 10px;
				width: 100%;
				font-size: 1rem;
				box-sizing: border-box;
			}


			form button{
				font-size: 1rem;
				display: block;
				padding: 10px 15px;
				margin-top: 10px;
				border-radius: 5px;
				color: white;
				background-color: rgb(0, 50, 100);
				border: 1px solid rgb(0, 25, 50);
			}



			main .purchase_statement{
				margin-top: 50px;
			}
			


		}




		@media screen and (min-width: 300px){

			input{
				height: 40px;
			}




			form button{
				padding: 12px 20px;
				margin-top: 15px;
			}
		}




		@media screen and (min-width: 350px){

			main input{
				height: 50px;
			}

			form button{
				padding: 14px 20px;
			}

		}
	</style>


</head>




<body>

	<%-include("./partialTemplate/header.ejs")%>



	<main>

		<article class="this_article">
			<h1>Enter Your Coil ID</h1>
			<p>Gotten a coil ID?... Enter the coil ID below.</p>
		</article>


		<form>
			<input placeholder="Enter Your Coil ID" type="text" name="coil_id" required>
			<button class="submit_button">Deposit</button>
		</form>


		<p class="purchase_statement" style="font-style: italic;">Click here to purchase Coil if you have not.</p>

	</main>




	<section style="display: none;" class="alert_wrapper">
		<i class="alert_icon fa-solid fa-circle-exclamation"></i>
		<p class="alert_p"></p>
		<button class="alert_cancel">Okay</button>
	</section>


	<%-include("./partialTemplate/footer.ejs")%>





	<script type="text/javascript">

		const form = document.querySelector("form");
		const header = document.querySelector("header");

		const alert_p = document.querySelector(".alert_p");
		const alert_icon = document.querySelector(".alert_icon");
		const alert_cancel = document.querySelector(".alert_cancel");
		const alert_wrapper = document.querySelector(".alert_wrapper");
		const submit_button = document.querySelector(".submit_button");




		const display_alert = ()=>{
			body_overlay.style.display = "block";
			body_overlay.style.opacity = "0.8";
			alert_wrapper.style.display = "block";

			const scrollY = window.scrollY || window.pageYOffset;
		  	const topPosition = 100+scrollY + 'px';
		    alert_wrapper.style.top = topPosition;
		}


		const closs_alert = ()=>{
			body_overlay.style.opacity = "0";
			body_overlay.style.display = "none";
			alert_wrapper.style.display = "none";
		}






		const currencyFormatter = new Intl.NumberFormat(header.dataset.format, {
		    style: 'currency',
		    currency: header.dataset.currency,
            maximumFractionDigits: 0
		});



		function formatDate(date) {
			const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];

			// Get month, day, hours, and minutes
			const month = months[date.getMonth()];
			const day = date.getDate();
			const hours = date.getHours();
			const minutes = date.getMinutes();
			  
			// Convert hours to 12-hour format and determine AM/PM
			const ampm = hours >= 12 ? 'PM' : 'AM';
			const formattedHours = hours % 12 || 12; // Handle 0 hours
			  
			// Format the date
			const formattedDate = month + ' ' + day + ' at ' + formattedHours + ':' + (minutes < 10 ? '0' : '') + minutes + ' ' + ampm;

			return formattedDate
		} 
		const currentDate = new Date();





		form.addEventListener("submit", async(e)=>{
			e.preventDefault();

			form.coil_id.blur();

			if(submit_button.disabled){
			}else{

				submit_button.disabled = true
				submit_button.textContent = "Loading...";

				try{
					const result = await fetch("/deposit", {

						method: "POST",

						headers: {"Content-Type": "application/json"},

						body: JSON.stringify({
							coil_id: form.coil_id.value,
							date: formatDate(currentDate)
						})
					});

					const res = await result.json();

					submit_button.disabled = false
					submit_button.textContent = "Deposit";

					if(res.message === "login needed"){
						alert_icon.className = "alert_icon fa-solid fa-circle-exclamation";
						alert_p.textContent = "Something Went Wrong: for your own safty, we are logging you out... Login and try again.";

						display_alert()

						alert_cancel.addEventListener("click", ()=>{
							window.location.href = "/login"
						});

						setTimeout(()=>{
							window.location.href = "/login";
						}, 5000);
					}else if(res.message === "Invalid Coil ID" || res.message.includes("This coil")){
						alert_icon.className = "alert_icon fa-solid fa-circle-exclamation";
						alert_p.textContent = res.message;

						display_alert();

					}else if(res.message === "successful"){
						alert_icon.className = "alert_icon fa-regular fa-circle-check"
						alert_p.textContent = currencyFormatter.format(res.amount_deposited)+ " has been deposited to your wallet";
						alert_cancel.textContent = "Okay";

						display_alert();

						alert_cancel.addEventListener("click", ()=>{
							window.location.href = "/deposit"
						});

						setTimeout(()=>{
							window.location.href = "/deposit";
						}, 10000);
					}else{
						alert_icon.className = "alert_icon fa-solid fa-circle-exclamation";
						alert_p.textContent = res.message+ " Please refresh and try again... If this error keep occurring, kindly report this error.";

						display_alert();
					}
				}catch(error){
					display_alert();
					console.log(error);
					submit_button.disabled = false
					alert_cancel.textContent = "Okay";
					alert_p.textContent = error.message
					submit_button.textContent = "Deposit";
					
					
				}
			}
		});












		body_overlay.addEventListener("click", ()=>{
			closs_alert();
		});

		alert_cancel.addEventListener("click", ()=>{
			closs_alert();
		});

		window.onscroll = function() {
			closs_alert();
		};
		
	</script>


</body>
</html>